{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login-component/login-component.component.ts","./src/app/login-component/login-component.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ShoppingFrontEnd';\n}\n","<app-login-component></app-login-component>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { LoginComponentComponent } from './login-component/login-component.component';\nimport{ReactiveFormsModule,FormsModule} from '@angular/forms'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login-component.component.html',\n  styleUrls: ['./login-component.component.css']\n})\nexport class LoginComponentComponent implements OnInit {\n  public heading=\"Login to Shopping App\"\n  public userName:string;\n  public password:string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<h2 style=\"text-align: center;\">{{heading}}</h2>\n<div class=\"log-form\">\n    <h2>Login to your account</h2>\n    <form>\n        <div class=\"inputField\">\n      <input type=\"text\" title=\"username\" placeholder=\"username\" />\n    </div>\n    <div class=\"inputField\">\n      <input type=\"password\" title=\"username\" placeholder=\"password\" />\n      </div>\n      <div class=\"inputField\">\n      <button type=\"submit\" class=\"btn\">Login</button>\n      </div>\n      <div class=\"inputField\">\n      <a class=\"forgot\" href=\"#\">Forgot Username?</a>\n      </div>\n    </form>\n  </div><!--end log form -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}